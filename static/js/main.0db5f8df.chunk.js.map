{"version":3,"sources":["poly.js","settings.js","spotify-context.js","spotify-app.js","spotify-login.js","utils.js","App.js","error-boundry.js","index.js"],"names":["String","prototype","repeat","count","this","TypeError","str","RangeError","Infinity","Math","floor","length","maxCount","log","substring","clientId","redirectUri","scope","SpotifyContext","React","createContext","spotifyApi","SpotifyContextProvider","_ref","auth","children","_useState","useState","io","socket","Object","slicedToArray","_useState3","_useState4","connected","setconnected","_useState5","_useState6","displayName","setDisplayName","_useState7","_useState8","image","setImage","_useState9","_useState10","userId","setUserId","_useState11","_useState12","setLog","pushToLog","value","prev","concat","toConsumableArray","fetchSpotify","url","Promise","resolve","axios","get","headers","Authorization","token_type","access_token","Content-Type","Accept","then","res","data","catch","err","JSON","stringify","useEffect","me","id","images","display_name","emit","name","error","Error","on","console","react_default","a","createElement","Provider","postSpotify","body","post","putSpotify","put","notification","text","store","addNotification","message","type","insert","container","animationIn","animationOut","className","dismiss","duration","spotify_app","_useSpotifyContext","useContext","_useState2","setGenres","setArtists","artistTracks","setArtistTracks","genreTracks","setGenreTracks","friendName","setFriendName","amountOfTracks","_useState13","_useState14","done","setDone","friendCode","window","location","href","replace","results","RegExp","exec","decodeURIComponent","getParameterByName","localStorage","getItem","result","newGenres","newArtists","items","forEach","item","genres","genre","push","spotify","artists","succes","weigths","friendPlaylist","keys","artistWeights","key","pow","genreWeights","totalWeigth","reduce","b","tracksWithArtists","map","artistId","amount","round","filter","totalWeigthGenres","tracksWithGenres","genreId","artist","tracks","slice","playlist","allTracks","Fragment","react_button_dist_default","onClick","uri","playlistPostData","description","public","trackUris","track","uris","index_es","objectSpread2","artistsNames","ar","join","columns","title","dataName","copyText","document","style","opacity","append","select","setSelectionRange","execCommand","remove","getUrl","search","params","delimiter","arguments","undefined","index","query","toQuery","client_id","redirect_uri","response_type","ErrorBoundary","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hasError","errorInfo","Component","require","polyfill","ReactDOM","render","error_boundry","dist_default","setAuth","setItem","spotify_context_SpotifyContextProvider","spotifyUrl","getElementById"],"mappings":"2EAAKA,OAAOC,UAAUC,SACpBF,OAAOC,UAAUC,OAAS,SAASC,GACjC,aACA,GAAY,MAARC,KACF,MAAM,IAAIC,UAAU,iBAAoBD,KAAO,cAEjD,IAAIE,EAAM,GAAKF,KAOf,IALAD,GAASA,IAEIA,IACXA,EAAQ,GAENA,EAAQ,EACV,MAAM,IAAII,WAAW,qCAEvB,GAAIJ,GAASK,IACX,MAAM,IAAID,WAAW,2CAGvB,GADAJ,EAAQM,KAAKC,MAAMP,GACD,GAAdG,EAAIK,QAAwB,GAATR,EACrB,MAAO,GAKT,GAAIG,EAAIK,OAASR,GAAS,GAAK,GAC7B,MAAM,IAAII,WAAW,sDAEvB,IAAIK,EAAWN,EAAIK,OAASR,EAE5B,IADAA,EAAQM,KAAKC,MAAMD,KAAKI,IAAIV,GAASM,KAAKI,IAAI,IACvCV,GACJG,GAAOA,EACPH,IAGH,OADAG,GAAOA,EAAIQ,UAAU,EAAGF,EAAWN,EAAIK,+FClC9BI,eAAW,oCAEXC,EAAc,sDACdC,EAAQ,gFCCfC,EAAiBC,IAAMC,cAAc,IAKrCC,EAAa,8BAINC,EAAyB,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,SAAeC,EAE3CC,mBAASC,IALT,iDAKVC,EAFqDC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,MAAAM,EAG1BL,oBAAS,GAHiBM,EAAAH,OAAAC,EAAA,EAAAD,CAAAE,EAAA,GAGrDE,EAHqDD,EAAA,GAG1CE,EAH0CF,EAAA,GAAAG,EAItBT,mBAAS,IAJaU,EAAAP,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAIrDE,EAJqDD,EAAA,GAIxCE,EAJwCF,EAAA,GAAAG,EAKlCb,mBAAS,IALyBc,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAKrDE,EALqDD,EAAA,GAK9CE,EAL8CF,EAAA,GAAAG,EAMhCjB,mBAAS,IANuBkB,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAMrDE,EANqDD,EAAA,GAM7CE,EAN6CF,EAAA,GAAAG,EAOtCrB,mBAAS,IAP6BsB,EAAAnB,OAAAC,EAAA,EAAAD,CAAAkB,EAAA,GAOhDE,GAPgDD,EAAA,GAAAA,EAAA,IAStDE,EAAY,SAACC,GACjBF,EAAO,SAAAG,GAAI,OAAKD,GAALE,OAAAxB,OAAAyB,EAAA,EAAAzB,CAAeuB,OAGtBG,EAAe,SAAAC,GAEnB,OADAN,EAAU,SAAWM,GACd,IAAIC,QAAQ,SAAAC,GACjBC,IAAMC,IAAIxC,EAAaoC,EAAK,CAC1BK,QAAS,CACPC,cAAa,GAAAT,OAAK9B,EAAKwC,WAAV,KAAAV,OAAwB9B,EAAKyC,cAC1CC,eAAgB,mBAChBC,OAAQ,sBAETC,KAAK,SAAAC,GACNlB,EAAU,YAAcM,GACxBE,EAAQU,EAAIC,QAEbC,MAAM,SAAAC,GACLrB,EAAU,SAAWM,EAAM,IAAMgB,KAAKC,UAAUF,SAsDtD,OAzBAG,oBAAU,WACRnB,EAAa,MACZY,KAAK,SAAAQ,GACJzB,EAAU,6BAA+BsB,KAAKC,UAAUE,IACxD7B,EAAU6B,EAAGC,IACblC,EAASiC,EAAGE,QAAUF,EAAGE,OAAO,IAAMF,EAAGE,OAAO,GAAGrB,KACnDlB,EAAeqC,EAAGG,cAAgB,aAClClD,EAAOmD,KAAK,WAAY,CAAEC,KAAML,EAAGG,cAAgB,gBAEpDR,MAAM,SAACW,GAEN,MADA/B,EAAU,aACJgC,MAAMD,MAEb,IAGHrD,EAAOuD,GAAG,UAAW,SAASd,GAC5Be,QAAQxE,IAAI,YAAagB,EAAOgD,IAChC1C,GAAa,KAEfN,EAAOuD,GAAG,QAAS,SAASd,MAC5BzC,EAAOuD,GAAG,aAAc,cAExBC,QAAQxE,IAAIyB,EAAaI,GAGvB4C,EAAAC,EAAAC,cAACtE,EAAeuE,SAAhB,CAAyBrC,MAAO,CAAE5B,OAAMgC,eAAckC,YAtCpC,SAACjC,EAAKkC,GACxB,OAAO,IAAIjC,QAAQ,SAAAC,GACjBC,IAAMgC,KAAKvE,EAAaoC,EAAKkC,EAAM,CACjC7B,QAAS,CACPC,cAAa,GAAAT,OAAK9B,EAAKwC,WAAV,KAAAV,OAAwB9B,EAAKyC,cAC1CC,eAAgB,mBAChBC,OAAQ,sBAETC,KAAK,SAAAC,GAAG,OAAIV,EAAQU,EAAIC,WA8BsCuB,WAlDlD,SAACpC,EAAKkC,GACvB,OAAO,IAAIjC,QAAQ,SAAAC,GACjBC,IAAMkC,IAAIzE,EAAaoC,EAAKkC,EAAM,CAChC7B,QAAS,CACPC,cAAa,GAAAT,OAAK9B,EAAKwC,WAAV,KAAAV,OAAwB9B,EAAKyC,cAC1CC,eAAgB,mBAChBC,OAAQ,sBAETC,KAAK,SAAAC,GAAG,OAAIV,EAAQU,EAAIC,WA0CkDzC,SAAQS,cAAaI,QAAOI,WACxGZ,GAAaI,EAAcb,EAAW,gEC1FvCsE,EAAe,SAACC,GACpBC,QAAMC,gBAAgB,CACpBC,QAASH,EACTI,KAAM,UACNC,OAAQ,MACRC,UAAW,YACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,UAAW,eACXC,QAAS,CACPC,SAAU,QAeD,IAAAC,EAAA,WAAM,IAAAC,EDzBkBC,qBAAW5F,GC0BxCsC,EADWqD,EACXrD,aAAc3B,EADHgF,EACGhF,OAAQS,EADXuE,EACWvE,YAAaoD,EADxBmB,EACwBnB,YAAqBG,GAD7CgB,EACqC/D,OADrC+D,EAC6ChB,YAD7CnE,EAESC,mBAAS,IAFlBoF,EAAAjF,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAEJsF,GAFID,EAAA,GAAAA,EAAA,IAAA/E,EAGWL,mBAAS,IAHpBM,EAAAH,OAAAC,EAAA,EAAAD,CAAAE,EAAA,GAGHiF,GAHGhF,EAAA,GAAAA,EAAA,IAAAG,EAIqBT,mBAAS,IAJ9BU,EAAAP,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAIZ8E,EAJY7E,EAAA,GAIE8E,EAJF9E,EAAA,GAAAG,EAKmBb,mBAAS,IAL5Bc,EAAAX,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAKZ4E,EALY3E,EAAA,GAKC4E,EALD5E,EAAA,GAAAG,EAMiBjB,mBAAS,IAN1BkB,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAMZ0E,EANYzE,EAAA,GAMA0E,EANA1E,EAAA,GAAAG,EAOMrB,mBAAS,IAA3B6F,EAPY1F,OAAAC,EAAA,EAAAD,CAAAkB,EAAA,MAAAyE,EAQK9F,oBAAS,GARd+F,EAAA5F,OAAAC,EAAA,EAAAD,CAAA2F,EAAA,GAQZE,EARYD,EAAA,GAQNE,EARMF,EAAA,GAUbG,EApBR,SAA4B5C,EAAMxB,GAC3BA,IAAKA,EAAMqE,OAAOC,SAASC,MAChC/C,EAAOA,EAAKgD,QAAQ,UAAW,QAC/B,IACIC,EADQ,IAAIC,OAAO,QAAUlD,EAAO,qBACpBmD,KAAK3E,GACzB,OAAKyE,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAGD,QAAQ,MAAO,MAD5B,GADH,KAeFK,CAAmB,eAAiBC,aAAaC,QAAQ,cAoC5E7D,oBAAU,WAjCRnB,EAAa,kBACVY,KAAK,SAAAqE,GACJpD,QAAQxE,IAAI4H,GAEZ,IAAMC,EAAY,GACZC,EAAa,GAEnBF,EAAOG,MAAMC,QAAQ,SAAAC,GACnBA,EAAKC,OAAOF,QAAQ,SAAAG,GAClBN,EAAUM,IAAUN,EAAUM,IAAU,GAAK,IAG/CL,EAAWM,KAAK,CACdhE,KAAM6D,EAAK7D,KACXJ,GAAIiE,EAAKjE,OAITgD,GACFxC,QAAQxE,IAAI,aAAcgH,GAC1BhG,EAAOmD,KAAK,iBAAkB,CAAEH,GAAIgD,EAAYvF,YAAaA,EAAa4G,QAAS,CAAEC,QAASR,EAAYI,OAAQL,IAAe,SAACpE,GAChIe,QAAQxE,IAAI,YAAayD,GACzBiD,EAAcjD,EAAKgD,eAGrBzF,EAAOmD,KAAK,WAAY,CAAEkE,QAAS,CAAEC,QAASR,EAAYI,OAAQL,IAAe,SAACU,GAChF/D,QAAQxE,IAAI,sBAAuBuI,OAU3CvH,EAAOuD,GAAG,kBAAmB,SAACd,GAC5B,IAAM+E,EAAU/E,EAAKgF,eACfhC,EAAahD,EAAKhC,YAExBR,OAAOyH,KAAKF,EAAQG,eAAeX,QAAQ,SAAAY,GACzCJ,EAAQG,cAAcC,GAAOhJ,KAAKiJ,IAAIL,EAAQG,cAAcC,GAAM,KAIpEpE,QAAQxE,IAAIwI,EAAQG,cAAeH,EAAQM,cAG3C,IAAMC,EAAc9H,OAAOyH,KAAKF,EAAQG,eAAeK,OAAO,SAACtE,EAAEuE,GAAH,OAASvE,EAAK8D,EAAQG,cAAcM,IAAI,GAEtGzE,QAAQxE,IAAI,cAAe+I,GAE3B,IAAMG,EAAoBjI,OAAOyH,KAAKF,EAAQG,eAAeQ,IAAI,SAAAC,GAAQ,MAAK,CAC5EpF,GAAIoF,EACJC,OAAQzJ,KAAK0J,MAAO3C,EAAiB,IAAOoC,EAAcP,EAAQG,cAAcS,OAC9EG,OAAO,SAAA7E,GAAC,OAAIA,EAAE2E,OAAS,IAGrBG,EAAoBvI,OAAOyH,KAAKF,EAAQM,cAAcE,OAAO,SAACtE,EAAEuE,GAAH,OAASvE,EAAK8D,EAAQM,aAAaG,IAAI,GACpGQ,EAAmBxI,OAAOyH,KAAKF,EAAQM,cAAcK,IAAI,SAAAO,GAAO,MAAK,CACzE1F,GAAI0F,EACJL,OAASzJ,KAAK0J,MAAO3C,EAAiB,EAAK6C,EAAoBhB,EAAQM,aAAaY,OAClFH,OAAO,SAAA7E,GAAC,OAAIA,EAAE2E,OAAS,IAG3B7E,QAAQxE,IAAIkJ,EAAmBO,GAG/BP,EAAkBlB,QAAQ,SAAA2B,GACxBhH,EAAY,WAAAF,OAAYkH,EAAO3F,GAAnB,iCAAAvB,OAAqDkH,EAAON,SACvE9F,KAAK,SAAAE,GACJ6C,EAAgB,SAACD,GAAD,SAAA5D,OAAAxB,OAAAyB,EAAA,EAAAzB,CAAuBoF,GAAvBpF,OAAAyB,EAAA,EAAAzB,CAAwCwC,EAAKmG,OAAOC,MAAM,EAAGF,EAAON,gBAIxFI,EAAiBzB,QAAQ,SAAAG,GACvBxF,EAAY,gBAAAF,OAAiB0F,EAAMnE,GAAvB,yCAAAvB,OAAiE0F,EAAMkB,SAClF9F,KAAK,SAAAE,GACJ+C,EAAe,SAACD,GAAD,SAAA9D,OAAAxB,OAAAyB,EAAA,EAAAzB,CAAsBsF,GAAtBtF,OAAAyB,EAAA,EAAAzB,CAAsCwC,EAAKmG,OAAO7B,MAAM8B,MAAM,EAAG1B,EAAMkB,gBAI1FlD,EAAUsD,GACVrD,EAAW8C,GACXxC,EAAcD,MAIf,IAEH3C,oBAAU,WACR9C,EAAOuD,GAAG,WAAY,SAAAuF,GACpB9E,EAAU,aAAAvC,OAAcqH,EAAS9F,GAAvB,eACV+C,EAAQ+C,MAET,IAoDH,IAAMlH,EAAM,kEAAyE5B,EAAOgD,GAE5FQ,QAAQxE,IAAIqG,EAAcE,GAE1B,IAAMwD,EAAS,GAAAtH,OAAAxB,OAAAyB,EAAA,EAAAzB,CAAOoF,GAAPpF,OAAAyB,EAAA,EAAAzB,CAAwBsF,IAEvC,OAAIO,EACKrC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsF,SAAA,KACLvF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACsF,EAAAvF,EAAD,CAAQwF,QAAS,kBAAMjD,OAAOC,SAAWJ,EAAKqD,MAA9C,kBAQF1F,EAAAC,EAAAC,cAAA,WAEI0B,EAAavG,OAAS,IAAMkH,GAAcvC,EAAAC,EAAAC,cAACsF,EAAAvF,EAAD,CAAQwF,QApEjC,WACrB,IAAME,EAAmB,CACvBhG,KAAA,2BAAA3B,OAAmCgE,GACnC4D,YAAA,oDAAA5H,OAAmEgE,EAAnE,KACA6D,QAAU,GAKZzF,EAAW,eAAiBuF,GAC3B7G,KAAK,SAAAuG,GACJtF,QAAQxE,IAAI8J,GACZ,IAAMS,EAAYR,EAAUZ,IAAI,SAAAqB,GAAK,OAAIA,EAAML,MAC/CtF,EAAW,aAAApC,OAAcqH,EAAS9F,GAAvB,WAAoC,CAC7CyG,KAAMF,IACLhH,KAAK,WACNwD,EAAQ+C,GACR9I,EAAOmD,KAAK,OAAQ2F,OAOxBtF,QAAQxE,IAAIoK,KA4CkC,mBAK1C3D,GAAchC,EAAAC,EAAAC,cAAA,6BAAqB8B,GAGnCJ,EAAavG,OAAS,GAAK2E,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CACzB9E,UAAU,aACVnC,KAAMsG,EAAUZ,IAAI,SAAAqB,GAAK,OAAAvJ,OAAA0J,EAAA,EAAA1J,CAAA,GAAUuJ,EAAV,CAAiBI,aAAcJ,EAAMlC,QAAQa,IAAI,SAAA0B,GAAE,OAAIA,EAAGzG,OAAM0G,KAAK,UAC9FC,QAAS,CAAE,CAAEC,MAAO,UAAWC,SAAU,gBAAiB,CAACD,MAAO,OAAQC,SAAU,YAIrFjE,GAAmC,IAArB+C,EAAUjK,QAAgB2E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsF,SAAA,uCACPpH,EAAI6B,EAAAC,EAAAC,cAAA,WACpCF,EAAAC,EAAAC,cAACsF,EAAAvF,EAAD,CAAQwF,QAAS,kBAzDzB,SAAkB/E,GAEhB,IAAI+F,EAAWC,SAASxG,cAAc,SACtCuG,EAAS3I,MAAQ4C,EACjB+F,EAASE,MAAMC,QAAU,IAEzBF,SAASrG,KAAKwG,OAAOJ,GAGrBA,EAASK,SACTL,EAASM,kBAAkB,EAAG,OAG9BL,SAASM,YAAY,QAErBP,EAASQ,SAGTxG,EAAa,4BAuCgBgG,CAAStI,KAAhC,cAMFoE,IAAeP,GAAchC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsF,SAAA,wBACVhD,KC9N3B,IAAM2E,EAAS,SAACzL,EAAUE,EAAOD,GAC/B,IAEMyL,ECJD,SAAiBC,GAAyB,IAAjBC,EAAiBC,UAAAjM,OAAA,QAAAkM,IAAAD,UAAA,GAAAA,UAAA,GAAL,IACpCrD,EAAOzH,OAAOyH,KAAKmD,GAEzB,OAAOnD,EAAKM,OAAO,SAACvJ,EAAKmJ,EAAKqD,GAC5B,IAAIC,EAAK,GAAAzJ,OAAMhD,GAANgD,OAAYmG,EAAZ,KAAAnG,OAAmBoJ,EAAOjD,IAMnC,OAJIqD,EAASvD,EAAK5I,OAAS,IACzBoM,GAASJ,GAGJI,GACN,IDPYC,CAAQ,CACrBC,UAAWlM,EACXE,QACAiM,aAjBJ,SAA4BjI,EAAMxB,GAC3BA,IAAKA,EAAMqE,OAAOC,SAASC,MAChC/C,EAAOA,EAAKgD,QAAQ,UAAW,QAC/B,IACIC,EADQ,IAAIC,OAAO,QAAUlD,EAAO,qBACpBmD,KAAK3E,GACzB,OAAKyE,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAGD,QAAQ,MAAO,MAD5B,GADH,KAOFK,CAAmB,cAKTtH,EAAc,gBAAkBA,EAC3DmM,cAAe,UAEjB,gDAAA7J,OAAiDmJ,IEdnD,SAASnE,EAAmBrD,EAAMxB,GAC3BA,IAAKA,EAAMqE,OAAOC,SAASC,MAChC/C,EAAOA,EAAKgD,QAAQ,UAAW,QAC/B,IACIC,EADQ,IAAIC,OAAO,QAAUlD,EAAO,qBACpBmD,KAAK3E,GACzB,OAAKyE,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAGD,QAAQ,MAAO,MAD5B,GADH,wDCkBRmF,cA5Bb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAxL,OAAAyL,EAAA,EAAAzL,CAAA1B,KAAAgN,IACjBE,EAAAxL,OAAA0L,EAAA,EAAA1L,CAAA1B,KAAA0B,OAAA2L,EAAA,EAAA3L,CAAAsL,GAAAM,KAAAtN,KAAMiN,KACDM,MAAQ,CAAEC,UAAU,EAAO1I,MAAO,MAFtBoI,iFAUDpI,EAAO2I,qCAMvB,OAAIzN,KAAKuN,MAAMC,SAENtI,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,mCACCf,KAAKC,UAAUtE,KAAKuN,MAAMzI,QAIxB9E,KAAKiN,MAAM5L,4DAnBYyD,GAE9B,MAAO,CAAE0I,UAAU,EAAM1I,MAAOA,UARR/D,IAAM2M,kBCQlCC,EAAQ,KAAeC,WACvBD,EAAQ,KAERE,IAASC,OAAO5I,EAAAC,EAAAC,cAAC2I,EAAD,KAAe7I,EAAAC,EAAAC,cAAC4I,EAAA7I,EAAD,MAAqBD,EAAAC,EAAAC,cFMrC,WAAe,IAAA9D,EACJC,mBAAS,MADLoF,EAAAjF,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACrBF,EADqBuF,EAAA,GACfsH,EADetH,EAAA,GAyB5B,OAtBApC,oBAAU,WACR,IAAMV,EAAeqE,EAAmB,gBAClCtE,EAAasE,EAAmB,cAChCT,EAAaS,EAAmB,cAElCT,GACFU,aAAa+F,QAAQ,aAAczG,GAGjC5D,GAAgBD,GAClBqK,EAAQ,CACNpK,eAAcD,gBAIjB,IAQDsB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,OACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,gBAEfnB,EAAAC,EAAAC,cAAA,+CACChE,EACC8D,EAAAC,EAAAC,cAAC+I,EAAD,CAAwB/M,KAAMA,GAC5B8D,EAAAC,EAAAC,cAACoB,EAAD,OAGFtB,EAAAC,EAAAC,cAAA,UACEiB,UAAU,iBACVsE,QAjBa,WACnB,IAAMyD,EAAahC,EAAOzL,EAAUE,EAAOD,GAC3C8G,OAAOC,SAASE,QAAQuG,KAapB,wBEzC4C,OAAyBxC,SAASyC,eAAe","file":"static/js/main.0db5f8df.chunk.js","sourcesContent":["if (!String.prototype.repeat) {\r\n  String.prototype.repeat = function(count) {\r\n    'use strict';\r\n    if (this == null)\r\n      throw new TypeError('can\\'t convert ' + this + ' to object');\r\n\r\n    var str = '' + this;\r\n    // To convert string to integer.\r\n    count = +count;\r\n    // Check NaN\r\n    if (count != count)\r\n      count = 0;\r\n\r\n    if (count < 0)\r\n      throw new RangeError('repeat count must be non-negative');\r\n\r\n    if (count == Infinity)\r\n      throw new RangeError('repeat count must be less than infinity');\r\n\r\n    count = Math.floor(count);\r\n    if (str.length == 0 || count == 0)\r\n      return '';\r\n\r\n    // Ensuring count is a 31-bit integer allows us to heavily optimize the\r\n    // main part. But anyway, most current (August 2014) browsers can't handle\r\n    // strings 1 << 28 chars or longer, so:\r\n    if (str.length * count >= 1 << 28)\r\n      throw new RangeError('repeat count must not overflow maximum string size');\r\n\r\n    var maxCount = str.length * count;\r\n    count = Math.floor(Math.log(count) / Math.log(2));\r\n    while (count) {\r\n       str += str;\r\n       count--;\r\n    }\r\n    str += str.substring(0, maxCount - str.length);\r\n    return str;\r\n  }\r\n}","// settings.js\r\nexport const clientId = \"d7f0997e6cee4c4cbb08090b33ab11fe\";\r\n// export const redirectUri = 'http://localhost:3000/';\r\nexport const redirectUri = 'https://jildertvenema.github.io/spotify-friends-app';\r\nexport const scope = \"user-top-read playlist-modify-public\";\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios'\r\n\r\n\r\nconst SpotifyContext = React.createContext({});\r\n\r\nexport const useSpotifyContext = () => useContext(SpotifyContext);\r\n\r\n\r\nconst spotifyApi = \"https://api.spotify.com/v1/\"\r\nconst backendAPi = \"https://spotify-friend-backend.herokuapp.com\"\r\n// const backendAPi = \"http://localhost:3001\"\r\n\r\nexport const SpotifyContextProvider = ({ auth, children }) => {\r\n\r\n  const [socket] = useState(io(backendAPi))\r\n  const [connected, setconnected] = useState(false)\r\n  const [displayName, setDisplayName] = useState('')\r\n  const [image, setImage] = useState('')\r\n  const [userId, setUserId] = useState('')\r\n  const [log, setLog] = useState([])\r\n\r\n  const pushToLog = (value) => {\r\n    setLog(prev => [value, ...prev])\r\n  }\r\n\r\n  const fetchSpotify = url => {\r\n    pushToLog('Fetch ' + url)\r\n    return new Promise(resolve => {\r\n      axios.get(spotifyApi + url, {\r\n        headers: {\r\n          Authorization: `${auth.token_type} ${auth.access_token}`,\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        }\r\n      }).then(res => {\r\n        pushToLog('resolved ' + url)\r\n        resolve(res.data)\r\n      })\r\n      .catch(err => {\r\n        pushToLog('Error ' + url + ' ' + JSON.stringify(err))\r\n      })\r\n    });\r\n  };\r\n\r\n  const putSpotify = (url, body) => {\r\n    return new Promise(resolve => {\r\n      axios.put(spotifyApi + url, body, {\r\n        headers: {\r\n          Authorization: `${auth.token_type} ${auth.access_token}`,\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        }\r\n      }).then(res => resolve(res.data))\r\n    })\r\n  }\r\n\r\n  const postSpotify = (url, body) => {\r\n    return new Promise(resolve => {\r\n      axios.post(spotifyApi + url, body, {\r\n        headers: {\r\n          Authorization: `${auth.token_type} ${auth.access_token}`,\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        }\r\n      }).then(res => resolve(res.data))\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchSpotify('me')\r\n    .then(me => {\r\n      pushToLog('Resolved setting data /me ' + JSON.stringify(me))\r\n      setUserId(me.id)\r\n      setImage(me.images && me.images[0] && me.images[0].url)\r\n      setDisplayName(me.display_name || \"my friend\")\r\n      socket.emit('set-name', { name: me.display_name || \"my friend\" })\r\n    })\r\n    .catch((error) => {\r\n      pushToLog('Error /me')\r\n      throw Error(error);\r\n    });\r\n  }, [])\r\n\r\n\r\n  socket.on('connect', function(data){\r\n    console.log('connected', socket.id)\r\n    setconnected(true)\r\n  });\r\n  socket.on('event', function(data){});\r\n  socket.on('disconnect', function(){});\r\n\r\n  console.log(displayName, image)\r\n\r\n  return (\r\n    <SpotifyContext.Provider value={{ auth, fetchSpotify, postSpotify, putSpotify, socket, displayName, image, userId }}>\r\n      {connected && displayName ? children : 'Loading..'}\r\n      {/* {!displayName && 'Waiting for display name.'}\r\n      {!connected && 'Waiting for socket connection'}\r\n      {!auth.token_type && 'No Token Type'}\r\n      {!auth.access_token && 'No Access token'}\r\n      <br />\r\n      {log.map(value => <div>{value}</div>)}\r\n      <br />\r\n      {!displayName && auth.token_type}\r\n      <br />\r\n      {!displayName && auth.access_token} */}\r\n    </SpotifyContext.Provider>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSpotifyContext } from \"./spotify-context\";\r\nimport { store } from 'react-notifications-component';\r\n\r\nimport Button from '@material/react-button';\r\nimport Table from \"react-material-table\"\r\n\r\nconst notification = (text) => {\r\n  store.addNotification({\r\n    message: text,\r\n    type: \"success\",\r\n    insert: \"top\",\r\n    container: \"top-right\",\r\n    animationIn: [\"animated\", \"fadeIn\"],\r\n    animationOut: [\"animated\", \"fadeOut\"],\r\n    className: 'notification',\r\n    dismiss: {\r\n      duration: 3000\r\n    }\r\n  });\r\n}\r\n\r\nfunction getParameterByName(name, url) {\r\n  if (!url) url = window.location.href;\r\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n  var regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'),\r\n      results = regex.exec(url);\r\n  if (!results) return null;\r\n  if (!results[2]) return '';\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\n\r\nexport default () => {\r\n  const { fetchSpotify, socket, displayName, postSpotify, userId, putSpotify } = useSpotifyContext();\r\n  const [genres, setGenres] = useState({});\r\n  const [artists, setArtists] = useState([]);\r\n  const [artistTracks, setArtistTracks] = useState([])\r\n  const [genreTracks, setGenreTracks] = useState([]);\r\n  const [friendName, setFriendName] = useState('')\r\n  const [amountOfTracks] = useState(40)\r\n  const [done, setDone] = useState(false)\r\n\r\n  const friendCode = getParameterByName('friendcode') && localStorage.getItem('friendCode')\r\n\r\n  const fetchArtists = () => {\r\n    fetchSpotify(\"me/top/artists\")\r\n      .then(result => {\r\n        console.log(result);\r\n\r\n        const newGenres = {};\r\n        const newArtists = [];\r\n\r\n        result.items.forEach(item => {\r\n          item.genres.forEach(genre => {\r\n            newGenres[genre] = (newGenres[genre] || 0) + 1;\r\n          });\r\n\r\n          newArtists.push({\r\n            name: item.name,\r\n            id: item.id\r\n          });\r\n        });\r\n\r\n        if (friendCode) {\r\n          console.log('friendCode', friendCode)\r\n          socket.emit('connect-friend', { id: friendCode, displayName: displayName, spotify: { artists: newArtists, genres: newGenres } }, (data) => {\r\n            console.log('connected', data)\r\n            setFriendName(data.friendName)\r\n          })\r\n        } else {\r\n          socket.emit('set-data', { spotify: { artists: newArtists, genres: newGenres } }, (succes) => {\r\n            console.log('succes setting data', succes)\r\n          })\r\n        }\r\n\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchArtists();\r\n\r\n    socket.on('friend-playlist', (data) => {\r\n      const weigths = data.friendPlaylist\r\n      const friendName = data.displayName\r\n\r\n      Object.keys(weigths.artistWeights).forEach(key => {\r\n        weigths.artistWeights[key] = Math.pow(weigths.artistWeights[key], 2)\r\n      })\r\n\r\n\r\n      console.log(weigths.artistWeights, weigths.genreWeights)\r\n      \r\n\r\n      const totalWeigth = Object.keys(weigths.artistWeights).reduce((a,b) => a += weigths.artistWeights[b], 0)\r\n\r\n      console.log('totalWeigth', totalWeigth)\r\n\r\n      const tracksWithArtists = Object.keys(weigths.artistWeights).map(artistId => ({\r\n        id: artistId,\r\n        amount: Math.round((amountOfTracks / 1.5) / totalWeigth * weigths.artistWeights[artistId])\r\n      })).filter(a => a.amount > 0)\r\n\r\n\r\n      const totalWeigthGenres = Object.keys(weigths.genreWeights).reduce((a,b) => a += weigths.genreWeights[b], 0)\r\n      const tracksWithGenres = Object.keys(weigths.genreWeights).map(genreId => ({\r\n        id: genreId,\r\n        amount:  Math.round((amountOfTracks / 2) / totalWeigthGenres * weigths.genreWeights[genreId])\r\n      })).filter(a => a.amount > 0)\r\n\r\n\r\n      console.log(tracksWithArtists, tracksWithGenres)\r\n\r\n\r\n      tracksWithArtists.forEach(artist => {\r\n        fetchSpotify(`artists/${artist.id}/top-tracks?country=NL&limit=${artist.amount}`)\r\n        .then(data => {\r\n          setArtistTracks((artistTracks) => [ ...artistTracks, ...data.tracks.slice(0, artist.amount) ])\r\n        })\r\n      })\r\n\r\n      tracksWithGenres.forEach(genre => {\r\n        fetchSpotify(`search?query=${genre.id}&type=track&market=NL&offset=0&limit=${genre.amount}`)\r\n        .then(data => {\r\n          setGenreTracks((genreTracks) => [ ...genreTracks, ...data.tracks.items.slice(0, genre.amount) ])\r\n        })\r\n      })\r\n\r\n      setGenres(tracksWithGenres)\r\n      setArtists(tracksWithArtists)\r\n      setFriendName(friendName)\r\n      \r\n    })\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on('set-done', playlist => {\r\n      putSpotify(`playlists/${playlist.id}/followers`)\r\n      setDone(playlist)\r\n    })\r\n  }, [])\r\n\r\n\r\n  const createPlayList = () => {\r\n    const playlistPostData = {\r\n      \"name\": `My friend Playlist with ${friendName}`,\r\n      \"description\": `Generated playlist based on shared interest with ${friendName}.`,\r\n      \"public\": true\r\n    }\r\n\r\n\r\n\r\n    postSpotify(`me/playlists`, playlistPostData)\r\n    .then(playlist => {\r\n      console.log(playlist)\r\n      const trackUris = allTracks.map(track => track.uri)\r\n      postSpotify(`playlists/${playlist.id}/tracks`, {\r\n        uris: trackUris\r\n      }).then(() => {\r\n        setDone(playlist)\r\n        socket.emit('done', playlist)\r\n      })\r\n    })\r\n\r\n\r\n\r\n\r\n    console.log(playlistPostData)\r\n\r\n  }\r\n\r\n  function copyText(text) {\r\n    /* Get the text field */\r\n    var copyText = document.createElement(\"input\");\r\n    copyText.value = text\r\n    copyText.style.opacity = '0'\r\n\r\n    document.body.append(copyText)\r\n  \r\n    /* Select the text field */\r\n    copyText.select();\r\n    copyText.setSelectionRange(0, 99999); /*For mobile devices*/\r\n  \r\n    /* Copy the text inside the text field */\r\n    document.execCommand(\"copy\");\r\n\r\n    copyText.remove()\r\n\r\n\r\n    notification('Copied url to clipboard!')\r\n  }\r\n\r\n  const url = \"https://jildertvenema.github.io/spotify-friends-app\" + '?friendCode=' + socket.id\r\n\r\n  console.log(artistTracks, genreTracks)\r\n\r\n  const allTracks = [...artistTracks, ...genreTracks]\r\n\r\n  if (done) {\r\n    return <>\r\n      <div>Done!</div>\r\n      <Button onClick={() => window.location = done.uri}>\r\n        Open PlayList\r\n      </Button>\r\n    </>\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        artistTracks.length > 0 && !friendCode && <Button onClick={createPlayList}>\r\n            Create playlist\r\n          </Button>\r\n      }\r\n      {\r\n        friendName && <div>Connected with {friendName}</div>\r\n      }\r\n      {\r\n        artistTracks.length > 0 && <Table \r\n          className='data-table'\r\n          data={allTracks.map(track => ({ ...track, artistsNames: track.artists.map(ar => ar.name).join('\\t') }))}\r\n          columns={[ { title: 'Artists', dataName: 'artistsNames'}, {title: 'Name', dataName: 'name' } ]}\r\n        />\r\n      }\r\n      {\r\n        !friendCode && allTracks.length === 0 && <>\r\n          Send this link to your friend: {url}<br/>\r\n          <Button onClick={() => copyText(url)}>\r\n            Copy link\r\n          </Button>\r\n        </>\r\n      }\r\n      {\r\n        friendCode && !friendName && <>\r\n          Connecting with {friendCode}\r\n        </>\r\n      }\r\n      {/* {artists.map(artist => (\r\n        <div key={artist.id}>{artist.name}</div>\r\n      ))}\r\n      {Object.keys(genres)\r\n        .sort((a, b) => genres[b] - genres[a])\r\n        .map(genre => (\r\n          <div key={genre}>\r\n            {genre}: {genres[genre]}\r\n          </div>\r\n        ))} */}\r\n    </div>\r\n  );\r\n};\r\n","import { toQuery } from './utils'\r\n\r\nfunction getParameterByName(name, url) {\r\n  if (!url) url = window.location.href;\r\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n  var regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'),\r\n      results = regex.exec(url);\r\n  if (!results) return null;\r\n  if (!results[2]) return '';\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\n\r\n\r\nconst getUrl = (clientId, scope, redirectUri) => {\r\n  const friendCode = getParameterByName('friendCode')\r\n\r\n  const search = toQuery({\r\n    client_id: clientId,\r\n    scope,\r\n    redirect_uri: friendCode ? redirectUri + '?friendcode=1' : redirectUri,\r\n    response_type: 'token'\r\n  });\r\n  return `https://accounts.spotify.com/authorize?${search}`\r\n}\r\n\r\n\r\n\r\nexport { getUrl }","export function toParams(query) {\r\n  const q = query.replace(/^\\??\\//, '');\r\n\r\n  return q.split('&').reduce((values, param) => {\r\n    const [key, value] = param.split('=');\r\n\r\n    values[key] = value;\r\n\r\n    return values;\r\n  }, {});\r\n}\r\n\r\nexport function toQuery(params, delimiter = '&') {\r\n  const keys = Object.keys(params);\r\n\r\n  return keys.reduce((str, key, index) => {\r\n    let query = `${str}${key}=${params[key]}`;\r\n\r\n    if (index < (keys.length - 1)) {\r\n      query += delimiter;\r\n    }\r\n\r\n    return query;\r\n  }, '');\r\n}","import React, { useState, useEffect } from \"react\";\nimport \"./styles.scss\";\nimport SpotifyLogin from \"react-spotify-login\";\nimport { clientId, redirectUri, scope } from \"./settings\";\nimport { SpotifyContextProvider } from \"./spotify-context\";\nimport SpotifyApp from \"./spotify-app\";\nimport { getUrl } from \"./spotify-login\";\n\nfunction getParameterByName(name, url) {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\n\nexport default function App() {\n  const [auth, setAuth] = useState(null);\n\n  useEffect(() => {\n    const access_token = getParameterByName('access_token')\n    const token_type = getParameterByName('token_type')\n    const friendCode = getParameterByName('friendCode')\n\n    if (friendCode) {\n      localStorage.setItem('friendCode', friendCode)\n    }\n\n    if (access_token && token_type) {\n      setAuth({\n        access_token, token_type\n      })\n    }\n    \n  }, [])\n\n  const loginSpotify = () => {\n    const spotifyUrl = getUrl(clientId, scope, redirectUri)\n    window.location.replace(spotifyUrl)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className='login-modal'>\n      </div>\n      <h1>Spotify Friend playlist generator</h1>\n      {auth ? (\n        <SpotifyContextProvider auth={auth}>\n          <SpotifyApp />\n        </SpotifyContextProvider>\n      ) : (\n        <button\n          className='spotify-button'\n          onClick={loginSpotify}\n        >\n          Login with Spotify\n        </button>\n      )}\n    </div>\n  );\n}\n","import React from 'react'\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false, error: null };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true, error: error };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    // logErrorToMyService(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return <div>\r\n        <h1>Something went wrong.</h1>\r\n        {JSON.stringify(this.state.error)}\r\n      </div>;\r\n    }\r\n\r\n    return this.props.children; \r\n  }\r\n}\r\n\r\nexport default ErrorBoundary\r\n","// index.js\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './poly'\nimport ErrorBoundary from './error-boundry'\nimport ReactNotification from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\n\n\nrequire('es6-promise').polyfill();\nrequire('es6-shim');\n\nReactDOM.render(<ErrorBoundary><ReactNotification /><App /></ErrorBoundary>, document.getElementById(\"root\"));\n"],"sourceRoot":""}